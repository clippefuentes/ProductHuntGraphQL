type Query {
  appName: String,
  allProducts: [Product!]!,
  productsByAuthor(authorName: String!): [Product!]!,
  productsByCategory(slug: String!): [Product!]!,
  allCategories: [Category!]!
}

type Mutation {
  createProduct(input: NewProduct): Product
  createCategory(input: NewCategory!): Category!
  upvoteProduct(productId: String!): Product
  logOut: Boolean!
  login(userName: String!, password: String!): LogInResponse!
}

type Product {
  name: String!,
  description: String!,
  url: String!,
  numberOfVotes: Int!,
  publishedAt: String!,
  author: User!,
  categories: [Category!]!
  id: ID!
}

type User {
  id: ID!,
  userName: String!,
  fullName: String!,
}

type Category {
  id: ID!
  slug: String!
  name: String!
}

type LogInResponse {
  expiresIn: Int!
  user: User!
}

input NewProduct {
  name: String!,
  description: String!,
  url: String!,
  categoriesIds: [ID!]!,
}

input NewProduct {
  name: String!,
  description: String!,
  url: String!,
  categoriesIds: [ID!]!,
}

input NewCategory {
  slug: String!
  name: String!
}
